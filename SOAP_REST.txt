Application Communication protocol

Web Service vs API

Web Service :- SOAP, REST
API (Application Program Interface) : - google API, FB API, etc

Clearly, both are means of communications. 
The difference is that Web Service almost always involves communication over network and HTTP is the most commonly used protocol. 
Web service also uses SOAP, REST, and XML-RPC as a means of communication. 
While an API can use any means of communication e.g. DLL files in C/C++, Jar files/ RMI in java, Interrupts in Linux kernel API etc. 
So, you can say that-

1. Web Service is an API wrapped in HTTP.
2. All Web Services are API but all APIs are not Web Services.
3. Web Service might not perform all the operations that an API would perform.
4. A Web Service needs a network while an API doesn't need a network for its operation.

SOAP (Simple Object Access protocol)
-SOAP stands for Simple object access protocol
-A XML Based messaging protocall
-Used WSDL(Web Service Discription Language)(Which is why it becomes bulky but Secure)
-Invoke services by calling RPC(Remote Procedure Call) Method 
-Does not return Human readable code
-Tranfer over HTTP, also uses other protocals SMPT, FTP, etc
-Javascript can call SOAP but it is difuicult to implement
-Performance is not great as compaired to REST.

SOAP Message :- 
SOAP Message is Ordinary XML document containing
1. Envolop : Defines the start and end of the message. it is mandatory element.
2. Header : Contains any optional attributes of the message used in processing the message, either at an intermediary point or at the ultimate end-point. It is an optional element.
3. Body : Contains the XML data comprising the message being sent. It is a mandatory element.
4. Fault : An optional Fault element that provides information about errors that occur while processing the message.

Ex : 
<?xml version = "1.0"?>
<SOAP-ENV:Envelope xmlns:SOAP-ENV = "http://www.w3.org/2001/12/soap-envelope" 
   SOAP-ENV:encodingStyle = "http://www.w3.org/2001/12/soap-encoding">

   <SOAP-ENV:Header>
      ...
      ...
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      ...
      ...
      <SOAP-ENV:Fault>
         ...
         ...
      </SOAP-ENV:Fault>
      ...
   </SOAP-ENV:Body>
</SOAP_ENV:Envelope>

Envolop : 
The SOAP envelope indicates the start and the end of the message so that the receiver knows when an entire message has been received. 
The SOAP envelope solves the problem of knowing when you are done receiving a message and are ready to process it. 
The SOAP envelope is therefore basically a packaging mechanism.
Every SOAP message has a root Envelope element.
Envelope is a mandatory part of SOAP message.
Every Envelope element must contain exactly one Body element.
If an Envelope contains a Header element, it must contain no more than one, and it must appear as the first child of the Envelope, before the Body.
The envelope changes when SOAP versions change.
The SOAP envelope is specified using the ENV namespace prefix and the Envelope element.
The optional SOAP encoding is also specified using a namespace name and the optional encodingStyle element, which could also point to an encoding style other than the SOAP one.

Header :
The optional Header element offers a flexible framework for specifying additional application-level requirements. 
For example, the Header element can be used to specify a digital signature for password-protected services. Likewise, it can be used to specify an account number for pay-per-use SOAP services.
It is an optional part of a SOAP message.
Header elements can occur multiple times.
Headers are intended to add new features and functionality.
The SOAP header contains header entries defined in a namespace.
The header is encoded as the first immediate child element of the SOAP envelope.
When multiple headers are defined, all immediate child elements of the SOAP header are interpreted as SOAP header blocks.

Body :
The SOAP body is a mandatory element that contains the application-defined XML data being exchanged in the SOAP message. 
The body must be contained within the envelope and must follow any headers that might be defined for the message.
The body is defined as a child element of the envelope, and the semantics for the body are defined in the associated SOAP schema.
The body contains mandatory information intended for the ultimate receiver of the message.

Fault :
If an error occurs during processing, the response to a SOAP message is a SOAP fault element in the body of the message, and the fault is returned to the sender of the SOAP message.
The SOAP fault mechanism returns specific information about the error, including a predefined code, a description, and the address of the SOAP processor that generated the fault.
A SOAP message can carry only one fault block.
Fault is an optional part of a SOAP message.
For HTTP binding, a successful response is linked to the 200 to 299 range of status codes.
SOAP Fault is linked to the 500 to 599 range of status codes.





REST (REpresentational State Transfer)
-An Architectural protocol
-Uses XML, JSON for send recive
-Simply calls services via URL Path 
-Results are readable which are just XML(Extensible Markup Language)/JSON(JavaScript Object Notation)
-Tranfer is just over HTTP
-Easy to call From JavaScript.
-Performance is great than SOAP.

In Rest 

REST vs RESTfull 
